# Distribution definition for: otto
#
# Copyright (c) 2011, Intel Corporation.
# All rights reserved.
#
# This file is released under the MIT license as described in
# ../meta/COPYING.MIT.

require conf/distro/poky.conf
DISTRO = "otto"
DISTROOVERRIDES = "poky:otto"
TCLIBC = "musl"
# FIXME: consider adding a new "tiny" feature
#DISTRO_FEATURES_append = " tiny"

# Distro config is evaluated after the machine config, so we have to explicitly
# set the kernel provider to override a machine config.
PREFERRED_PROVIDER_virtual/kernel = "linux-raspberrypi-rt"
## PREFERRED_VERSION_linux-yocto-tiny ?= "5.0%"

# We can use packagegroup-core-boot, but in the future we may need a new packagegroup-core-tiny
#POKY_DEFAULT_EXTRA_RDEPENDS += "packagegroup-core-boot"
# Drop kernel-module-af-packet from RRECOMMENDS
POKY_DEFAULT_EXTRA_RRECOMMENDS = ""

# FIXME: what should we do with this?
TCLIBCAPPEND = ""

# Disable wide char support for ncurses as we don't include it in
# in the LIBC features below.
# Leave native enable to avoid build failures
ENABLE_WIDEC = "false"
ENABLE_WIDEC_class-native = "true"

# Drop native language support. This removes the
# eglibc->bash->gettext->libc-posix-clang-wchar dependency.
USE_NLS="no"

# Comment out any of the lines below to disable them in the build
# DISTRO_FEATURES options:
# alsa bluetooth ext2 pcmcia usbgadget usbhost wifi nfs zeroconf pci
DISTRO_FEATURES_TINY = "pci"
DISTRO_FEATURES_NET = "ipv4 ipv6"
DISTRO_FEATURES_USB = "usbhost"
#DISTRO_FEATURES_USBGADGET = "usbgadget"
DISTRO_FEATURES_WIFI = "wifi"

DISTRO_FEATURES = "${DISTRO_FEATURES_TINY} \
                   ${DISTRO_FEATURES_NET} \
                   ${DISTRO_FEATURES_USB} \
                   ${DISTRO_FEATURES_USBGADGET} \
                   ${DISTRO_FEATURES_WIFI} \
                   sysvinit \
                  "

# Enable LFS - see bug YOCTO #5865
DISTRO_FEATURES_append_libc-uclibc = " largefile"
DISTRO_FEATURES_append_libc-musl = " largefile"

DISTRO_FEATURES_class-native = "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"
DISTRO_FEATURES_class-nativesdk = "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"

# enable mdev/busybox for init
INIT_MANAGER ?= "mdev-busybox"

# FIXME: Consider adding "modules" to MACHINE_FEATURES and using that in
# packagegroup-core-base to select modutils-initscripts or not.  Similar with "net" and
# netbase.

# By default we only support initramfs. We don't build live as that
# pulls in a lot of dependencies for the live image and the installer, like
# udev, grub, etc.  These pull in gettext, which fails to build with wide
# character support.
## IMAGE_FSTYPES = "cpio.gz"

## QB_DEFAULT_FSTYPE = "${IMAGE_FSTYPES}"

# Drop v86d from qemu dependency list (we support serial)
# Drop grub from meta-intel BSPs
# FIXME: A different mechanism is needed here. We could define -tiny
#        variants of all compatible machines, but that leads to a lot
#        more machine configs to maintain long term.
MACHINE_ESSENTIAL_EXTRA_RDEPENDS = ""

# The mtrace script included by eglibc is a perl script. This means the system
# will build perl in case this package is installed. Since we don't care about
# this script for the purposes of tiny, remove the dependency from here.
RDEPENDS_${PN}-mtrace_pn-eglibc = ""

PNBLACKLIST[build-appliance-image] = "not buildable with otto"
PNBLACKLIST[core-image-base] = "not buildable with otto"
PNBLACKLIST[core-image-clutter] = "not buildable with otto"
PNBLACKLIST[core-image-full-cmdline] = "not buildable with otto"
PNBLACKLIST[core-image-rt] = "not buildable with otto"
PNBLACKLIST[core-image-rt-sdk] = "not buildable with otto"
PNBLACKLIST[core-image-sato] = "not buildable with otto"
PNBLACKLIST[core-image-sato-dev] = "not buildable with otto"
PNBLACKLIST[core-image-sato-sdk] = "not buildable with otto"
PNBLACKLIST[core-image-x11] = "not buildable with otto"
PNBLACKLIST[core-image-weston] = "not buildable with otto"
PNBLACKLIST[busybox-syslog] = "not buildable with otto"

# Disable python usage in opkg-utils since it won't build with tiny config
PACKAGECONFIG_remove_pn-opkg-utils = "python"

HOSTTOOLS += "python2"

# PACKAGECONFIG_remove_pn-libxml2 = "python"
# PACKAGECONFIG_remove_pn-libxml2-native = "python"

# TODO: Remove python3 from target.
#PNBLACKLIST_otto-image[python3] = "Disabled on otto"

CMDLINE = "dwc_otg.lpm_enable=0 console=serial0,115200 root=/dev/mmcblk0p2 rootfstype=ext4 rootwait init=/init"
DISABLE_SPLASH = "1"
DISABLE_RPI_BOOT_LOGO = "1"
ENABLE_I2C = "1"
# Disable the SPI driver so the screen driver can take over
ENABLE_SPI_BUS = "0"
ENABLE_UART = "1"
RPI_EXTRA_CONFIG += "\
framebuffer_width=320\n\
framebuffer_height=240\n\
gpio=${OPENOCD_SRST_PIN}=ip,pu\n\
gpio=${OPENOCD_SWCLK_PIN}=ip,pu\n\
gpio=${OPENOCD_SWDIO_PIN}=ip,pd\n\
hdmi_force_hotplug=1\n\
hdmi_group=2\n\
hdmi_mode=87\n\
hdmi_cvt=320 240 60 1 0 0 0\n\
"

# vim: ft=sh
